-- =====================================================
-- BigQuery SQL Conversion for Ab Initio Graph: IODS_CONS_CSV_DNTL_CLMDTL_HX_BR2
-- Version: 1
-- Generated by automated workflow conversion
-- =====================================================

/*
Workflow Sequence (preserved):
  1. Source: V0S77P1 (TGT SeqNo)
  2. JOIN (V0S77P1 + V0S69)
  3. Reformat (V0S49P2)
  4. Adaptor (V0S48P3) â†’ DS DENTAL CLMDTL HX INS
  5. Output Table (DS CONS CSV DENTAL CLMDTL HX via V0S67)
  6. Sort/KeyGen (V0S48P1, V0S48, V0S69P2, V0S69P4)
*/

-- ========== CTE 1: Source Extraction ==========
WITH source_v0s77p1 AS (
  SELECT *
  FROM `project.dataset.stg_cons_csv_dental_clm_dtl_hx` -- staging input
),

-- ========== CTE 2: Latest Sequence Number per Claim ==========
max_seq_per_claim AS (
  SELECT
    AK_UCK_ID,
    AK_UCK_ID_PREFIX_CD,
    AK_UCK_ID_SEGMENT_NO,
    MAX(CONS_CSV_DENTAL_CLM_DTL_SEQ_NO) AS CONS_CSV_DENTAL_CLM_DTL_SEQ_NO
  FROM `project.dataset.cons_csv_dental_clm_dtl_hx`
  GROUP BY AK_UCK_ID, AK_UCK_ID_PREFIX_CD, AK_UCK_ID_SEGMENT_NO
),

-- ========== CTE 3: Join with Max Sequence ==========
joined_v0s69 AS (
  SELECT
    src.AK_UCK_ID,
    src.AK_UCK_ID_PREFIX_CD,
    src.AK_UCK_ID_SEGMENT_NO,
    src.AK_SUBMT_SVC_LN_NO,
    IFNULL(msq.CONS_CSV_DENTAL_CLM_DTL_SEQ_NO, 0) AS CONS_CSV_DENTAL_CLM_DTL_SEQ_NO,
    src.* EXCEPT(AK_UCK_ID, AK_UCK_ID_PREFIX_CD, AK_UCK_ID_SEGMENT_NO, AK_SUBMT_SVC_LN_NO)
  FROM source_v0s77p1 src
  LEFT JOIN max_seq_per_claim msq
    ON src.AK_UCK_ID = msq.AK_UCK_ID
    AND src.AK_UCK_ID_PREFIX_CD = msq.AK_UCK_ID_PREFIX_CD
    AND src.AK_UCK_ID_SEGMENT_NO = msq.AK_UCK_ID_SEGMENT_NO
),

-- ========== CTE 4: Reformat/Adaptor (V0S49P2/V0S48P3) ==========
reformatted_claims AS (
  SELECT
    *,
    CURRENT_TIMESTAMP() AS AUDIT_INSERT_TS,
    CURRENT_TIMESTAMP() AS AUDIT_UPDATE_TS,
    FORMAT_DATE('%Y-%m-%d', CURRENT_DATE()) AS LOAD_DATE,
    FORMAT_DATE('%d', CURRENT_DATE()) AS LOAD_DAY,
    FORMAT_TIMESTAMP('%H%M', CURRENT_TIMESTAMP()) AS LOAD_TIME,
    CAST(0 AS INT64) AS UPDATE_FILE_ID,
    SESSION_USER() AS process_id,
    CURRENT_DATETIME() AS ingest_time,
    CAST(1 AS INT64) AS INSERT_FILE_ID
  FROM joined_v0s69
),

-- ========== CTE 5: Sequence Number Calculation ==========
claims_with_sequence AS (
  SELECT
    *,
    ROW_NUMBER() OVER (PARTITION BY CONS_CSV_DENTAL_CLM_HX_ID ORDER BY CONS_CSV_DENTAL_CLM_DTL_SEQ_NO) AS CONS_CSV_DENTAL_CLM_DTL_SEQ_NO_CALCULATED
  FROM reformatted_claims
),

-- ========== CTE 6: Final Output Columns ==========
final_output AS (
  SELECT
    -- Column list placeholder for >100 columns
    {{COLUMNS_PLACEHOLDER}}
  FROM claims_with_sequence
)

-- ========== Final Output ==========
SELECT * FROM final_output;

--
-- Note: All transformation logic is modularized in CTEs, UDFs are referenced where applicable.
--       Column list is referenced via placeholder and must be replaced with actual column names (see column_name_list_1.txt).
--       All join and flow sequence is preserved as per original Ab Initio workflow.
--
